import api from './apiClient'

// üîπ –ü–æ–ª—É—á–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–∞–º–∏
export const fetchCsrfToken = async (): Promise<void> => {
	try {
		const response = await api.get('/auth/csrf-token', {
			withCredentials: true,
		})
		console.log('‚úÖ CSRF-—Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', response.data)
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CSRF-—Ç–æ–∫–µ–Ω–∞:', error)
		throw error
	}
}

// üîπ –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏–Ω–∞
export const login = async (
	email: string,
	password: string,
	rememberMe: boolean
) => {
	try {
		await fetchCsrfToken() // ‚úÖ –ü–æ–ª—É—á–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –ª–æ–≥–∏–Ω–æ–º

		const response = await api.post(
			'/auth/login',
			{ email, password, rememberMe },
			{ withCredentials: true }
		)

		console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, –∫—É–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')

		// ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
		sessionStorage.setItem('currentUser', JSON.stringify(response.data))

		return response.data
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error)
		throw error
	}
}

// üîπ –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞
export const logout = async () => {
	try {
		await api.post('/auth/logout', {}, { withCredentials: true })
		console.log('‚úÖ –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω')

		// ‚ùå –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		sessionStorage.removeItem('currentUser')
		document.cookie =
			'accessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT;'
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error)
	}
}

export const getUserSession = async () => {
	try {
		const response = await api.get('/auth/session', { withCredentials: true })

		if (!response.data || !response.data._id) {
			return null
		}

		return response.data
	} catch (error) {
		return null
	}
}

export const fetchCurrentUser = async () => {
	try {
		const response = await api.get('/auth/session', { withCredentials: true })

		return response.data
	} catch (error) {
		return null
	}
}

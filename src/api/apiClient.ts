import axios from 'axios'

const API_URL = 'http://localhost:8000'

// üîπ –°–æ–∑–¥–∞—ë–º –±–∞–∑–æ–≤—ã–π API-–∫–ª–∏–µ–Ω—Ç
const api = axios.create({
	baseURL: API_URL,
	withCredentials: true, // ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º –∫—É–∫–∏
	headers: {
		'Content-Type': 'application/json',
	},
})

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è CSRF-—Ç–æ–∫–µ–Ω–∞
export const fetchCsrfToken = async () => {
	try {
		await api.get('/auth/csrf-token', { withCredentials: true })
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CSRF-—Ç–æ–∫–µ–Ω–∞:', error)
		throw error
	}
}

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è CSRF-—Ç–æ–∫–µ–Ω–∞ –∏–∑ cookies
export const getCsrfTokenFromCookie = (): string => {
	return (
		document.cookie
			.split('; ')
			.find(row => row.startsWith('XSRF-TOKEN='))
			?.split('=')[1] || ''
	)
}

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ CSRF
export const getAuthHeaders = async () => {
	try {
		await fetchCsrfToken() // ‚úÖ –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ CSRF-—Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω
		const csrfToken = getCsrfTokenFromCookie()
		const token = localStorage.getItem('accessToken')

		if (!csrfToken) throw new Error('CSRF token missing')

		return {
			Authorization: `Bearer ${token || ''}`,
			'X-XSRF-TOKEN': csrfToken,
		}
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
		throw error
	}
}

export default api

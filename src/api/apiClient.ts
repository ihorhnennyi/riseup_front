import axios from 'axios'

const API_URL = 'http://localhost:8000' // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–æ—Ä—Ç —Å–æ–≤–ø–∞–¥–∞–µ—Ç

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ API-–∫–ª–∏–µ–Ω—Ç–∞
const api = axios.create({
	baseURL: API_URL,
	withCredentials: true, // ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫—É–∫–æ–≤
	headers: {
		'Content-Type': 'application/json',
		Accept: 'application/json',
	},
})
api.interceptors.request.use(config => {
	// ‚ö° –ù–ï –ø—ã—Ç–∞–π—Å—è —á–∏—Ç–∞—Ç—å accessToken –∏–∑ document.cookie, –æ–Ω HttpOnly!
	return config
})

api.interceptors.response.use(
	response => response,
	async error => {
		const originalRequest = error.config

		if (error.response?.status === 401 && !originalRequest._retry) {
			originalRequest._retry = true
			console.warn('üîÑ –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å...')

			try {
				// ‚ö° –ù–ï –ø–µ—Ä–µ–¥–∞–≤–∞–π refresh-—Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é, –∫—É–∫–∏ –ø–µ—Ä–µ–¥–∞–¥—É—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
				await api.post('/auth/refresh', {}, { withCredentials: true })

				return api(originalRequest)
			} catch (refreshError) {
				console.error('üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', refreshError)
				return Promise.reject(refreshError)
			}
		}

		return Promise.reject(error)
	}
)

export default api

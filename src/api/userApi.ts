import api from './apiClient'

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const fetchUsers = async () => {
	const response = await api.get('/users', { withCredentials: true })
	return response.data
}

export const fetchUserById = async (id: string) => {
	const response = await api.get(`/users/${id}`, { withCredentials: true })
	return response.data
}

export const createUser = async (userData: FormData) => {
	return api.post('/users', userData, { withCredentials: true })
}

export const updateUser = async (id: string, userData: FormData) => {
	return api.put(`/users/${id}`, userData, { withCredentials: true })
}

export const deleteUser = async (id: string) => {
	const response = await api.delete(`/users/${id}`, { withCredentials: true })
	return response.data
}

export const fetchLeadsByRecruiter = async (recruiterId: string) => {
	const response = await api.get(`/users/${recruiterId}/leads`, {
		withCredentials: true,
	})
	return response.data
}

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–∏–¥–æ–≤ –ø–æ —Ä–µ–∫—Ä—É—Ç–µ—Ä—É (—É–±—Ä–∞–ª–∏ getAuthHeaders)
export const fetchCurrentUser = async () => {
	try {
		const response = await api.get('/auth/session', { withCredentials: true })

		if (response.status === 401) {
			console.warn('üîÑ –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–æ–≥–∏–Ω–µ–Ω!')
			return null
		}

		if (!response.data || !response.data._id) {
			console.error('‚ùå –û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
			return null
		}

		// ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ sessionStorage
		sessionStorage.setItem('currentUser', JSON.stringify(response.data))

		console.log('üõ† –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.data)
		return response.data
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ fetchCurrentUser:', error)

		if (error.response?.status === 401) {
			console.warn('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª 401 ‚Üí —Å–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞')
			// –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å logout() –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∫—É–∫–∏
		}
		return null
	}
}

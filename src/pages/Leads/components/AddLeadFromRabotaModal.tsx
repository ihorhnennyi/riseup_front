import { createLead } from '@api/leadsApi'
import { fetchCurrentUser, fetchUserById } from '@api/userApi'
import { ModalWrapper } from '@components/index'
import { Button, TextField } from '@mui/material'
import axios from 'axios'
import { useEffect, useState } from 'react'

interface AddLeadFromRabotaModalProps {
	open: boolean
	onClose: () => void
	onLeadAdded: () => void // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ª–∏–¥–æ–≤
}

const AddLeadFromRabotaModal: React.FC<AddLeadFromRabotaModalProps> = ({
	open,
	onClose,
	onLeadAdded,
}) => {
	const [error, setError] = useState<string | null>(null)
	const [login, setLogin] = useState<string | null>(null)
	const [password, setPassword] = useState<string | null>(null)
	const [loading, setLoading] = useState<boolean>(false)
	const [userId, setUserId] = useState<string | null>(null)
	const [candidateId, setCandidateId] = useState<string>('')
	const [resume, setResume] = useState<any>(null)

	useEffect(() => {
		const loadCurrentUser = async () => {
			try {
				const user = await fetchCurrentUser() // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
				console.log('üîç fetchCurrentUser –≤–µ—Ä–Ω—É–ª:', user) // üî• –õ–æ–≥

				if (!user || !user._id) {
					setError('‚ùå –û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
					return
				}

				setUserId(user._id) // ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID

				// üõ† –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
				const rabotaIntegration = user.integrations?.find(
					(integration: any) =>
						integration.name.toLowerCase().trim() === 'rabota.ua'
				)

				if (rabotaIntegration) {
					setLogin(rabotaIntegration.login.trim())
					setPassword(rabotaIntegration.password.trim())
					console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Rabota.ua:', rabotaIntegration)
				} else {
					setError('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Rabota.ua!')
				}
			} catch (err) {
				console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err)
				setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
			}
		}

		loadCurrentUser()
	}, [])

	const handleFetchAndSaveCandidate = async () => {
		setError(null)
		setLoading(true)

		console.log('üöÄ –°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞...')

		if (!login || !password) {
			setError('‚ùå –õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏!')
			setLoading(false)
			return
		}

		try {
			// üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Rabota.ua API
			console.log('üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Rabota.ua...')
			const authResponse = await axios.post(
				'https://auth-api.robota.ua/Login',
				{ username: login, password: password, remember: true }
			)
			const token = authResponse.data
			console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω')

			// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
			console.log(`üîç –ó–∞–ø—Ä–æ—Å —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: ID ${candidateId}`)
			const resumeResponse = await axios.get(
				`https://employer-api.robota.ua/resume/${candidateId}`,
				{ headers: { Authorization: `Bearer ${token}` } }
			)

			if (!resumeResponse.data) {
				throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API Rabota.ua')
			}

			const candidateData = resumeResponse.data
			console.log('üìÑ –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:', candidateData)

			// üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞
			if (!userId) {
				throw new Error('‚ùå –û—à–∏–±–∫–∞: ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')
			}

			console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞: ${userId}`)
			const recruiterExists = await fetchUserById(userId)

			if (!recruiterExists) {
				setError('‚ùå –û—à–∏–±–∫–∞: –†–µ–∫—Ä—É—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!')
				setLoading(false)
				console.log('‚ùå –†–µ–∫—Ä—É—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!')
				return
			}

			console.log('‚úÖ –†–µ–∫—Ä—É—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω:', recruiterExists)

			// üîπ –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
			const newCandidate = {
				name: candidateData.name || '',
				surname: candidateData.surname || '',
				email: candidateData.email || '',
				phone: candidateData.phone || '',
				age: Number(candidateData.age) || 0,
				salaryExpectation: Number(candidateData.salary) || undefined,
				relocation: candidateData.relocations?.length > 0 ? true : undefined,
				remoteWork: candidateData.workSchedule?.includes(7) ? true : undefined,
				workSchedule: candidateData.scheduleIds
					? candidateData.scheduleIds.split(',')
					: undefined,
				notes: candidateData.notes ? candidateData.notes.join('\n') : undefined,
				recruiter: userId, // ‚úÖ ID –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞
			}

			console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', newCandidate)

			// üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ
			const response = await createLead(newCandidate)

			console.log('‚úÖ –ö–∞–Ω–¥–∏–¥–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', response)
			setResume(candidateData)

			// ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ onLeadAdded –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º
			if (onLeadAdded) {
				onLeadAdded()
			} else {
				console.warn('‚ö†Ô∏è onLeadAdded –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ AddLeadFromRabotaModal')
			}

			// ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
			if (onClose) {
				onClose()
			} else {
				console.warn('‚ö†Ô∏è onClose –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ AddLeadFromRabotaModal')
			}
		} catch (error: any) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–µ–∑—é–º–µ:', error)
			setError(error.response?.data?.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—é–º–µ')
		} finally {
			setLoading(false)
		}
	}

	return (
		<ModalWrapper title='Rabota.ua' open={open} onClose={onClose}>
			<TextField
				fullWidth
				label='ID –∫–∞–Ω–¥–∏–¥–∞—Ç–∞'
				value={candidateId}
				onChange={e => setCandidateId(e.target.value)}
				variant='outlined'
				sx={{ marginBottom: '20px' }}
			/>
			<Button
				color='primary'
				onClick={handleFetchAndSaveCandidate}
				disabled={loading}
			>
				{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ù–∞–π—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞'}
			</Button>
			{error && <p style={{ color: 'red' }}>{error}</p>}
		</ModalWrapper>
	)
}

export default AddLeadFromRabotaModal

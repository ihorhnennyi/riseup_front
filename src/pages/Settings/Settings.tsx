import { fetchCities } from '@api/cityApi' // üîπ –ò–º–ø–æ—Ä—Ç API –∑–∞–ø—Ä–æ—Å–∞
import PageHeader from '@components/PageHeader'
import { Box } from '@mui/material'
import { useEffect, useState } from 'react'
import BranchBlock from './components/BranchBlock'
import CityBlock from './components/CityBlock'
import IntegrationBlock from './components/IntergrationBlock'
import StatusBlock from './components/StatusBlock'

type City = {
	_id: string
	name: string
}

const Settings = () => {
	const [cities, setCities] = useState<City[]>([]) // üìå –•—Ä–∞–Ω–∏–º –≥–æ—Ä–æ–¥–∞

	// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ä–æ–¥–∞ —Å API –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
	useEffect(() => {
		const loadCities = async () => {
			try {
				const cityData = await fetchCities() // üîπ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
				setCities(cityData) // üìå –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ state
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä–æ–¥–æ–≤:', error)
			}
		}

		loadCities()
	}, [])

	return (
		<Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
			<PageHeader
				title='–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
				description='–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
			/>

			<Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>
				<StatusBlock />
				<CityBlock />
				<BranchBlock cities={cities} /> {/* ‚úÖ –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ */}
				<IntegrationBlock />
			</Box>
		</Box>
	)
}

export default Settings
